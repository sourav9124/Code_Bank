Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n=nums.size();
        map<int,int> mp;
        for(int i=0;i<n;i++)
        {
            mp[nums[i]]++;
        }
        map<int,int>::iterator it;
       int max=INT_MIN;
       int res;
        for(it=mp.begin();it!=mp.end();it++)
        {
            if(max<it->second)
            {
            max=it->second;
            res=it->first;
            } 
        }
        return res;
        
    }
};

LeetCode Link ==> https://leetcode.com/problems/majority-element/?envType=study-plan-v2&envId=top-interview-150

TimeComplexity => O(nlog(n))
SpaceComplexity => O(n)